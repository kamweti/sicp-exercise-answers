#lang scheme

(define (square x) (* x x))
(define (sqrt-iter guess x)
  (if (good-enough? guess x)
    guess
    (sqrt-iter (improve guess x) x)))

(define (improve guess x )
  (average guess (/ x guess)))

(define (average x y)
  (/ (+ x y) 2))

(define (good-enough? guess x)
  (< (abs (- (square guess) x)) 0.001))

(define (newtsqrt x)
  (sqrt-iter 1.0 x))

; test
(newtsqrt 1)
(newtsqrt 4)
(newtsqrt 9)
(newtsqrt 36)
(newtsqrt 81)
(newtsqrt 121)
(newtsqrt 1369)
(newtsqrt 346921)

